{"version":3,"sources":["components/Root/styles.module.scss","components/Main/styles.module.scss","components/Logo/styles.module.scss","components/Settings/ColorsPallet/styles.module.scss","components/GitHubLink/styles.module.scss","components/Logo/Icon/styles.module.scss","components/Header/styles.module.scss","redux/modules/settings/actionTypes.js","redux/modules/settings/reducer.js","redux/modules/settings/index.js","redux/modules/index.js","redux/store.js","utils/canvas.js","utils/colors.js","common/imageProcessor.js","common/pixelizator.js","common/contour.js","components/Settings/ColorsPallet/ColorsPallet.js","utils/pallets.js","components/Settings/PixelizatorOptions/PixelizatorOptions.js","components/Settings/ContourOptions/ContourOptions.js","components/Settings/Settings.js","components/Logo/Icon/Icon.js","components/Logo/Logo.js","common/webcam.js","components/Header/Header.js","components/Main/Main.js","components/GitHubLink/GitHubLink.js","components/Root/Root.js","index.js","serviceWorker.js"],"names":["module","exports","root","sidebar","settings","content","logo","header","main","image","processedImage","layersContainer","layer","originalLayer","processedLayer","noImage","icon","title","cell","octicon","UPDATE_SETTINGS","initialState","reducer","state","arguments","length","undefined","action","type","controls","Object","objectSpread","combineReducers","configureStore","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","rootReducer","setImageDataPixel","imageData","x","y","pixel","imageDataWidth","width","i","data","getImageDataPixel","colorDistance","v1","v2","d","Math","sqrt","getNearestColor","sourceColor","compareColors","nearestDistance","Number","MAX_SAFE_INTEGER","nearestColor","forEach","color","distance","averageColor","colors","results","reduce","r","floor","imageProcessor","height","imageSrc","processedImageData","filter","filterOptions","_this2","this","Promise","resolve","reject","Image","src","onload","canvas","document","createElement","context","getContext","drawImage","getImageData","processImage","dispatchEvent","Event","options","_this$filterOptions","pixelSize","accurateColors","_ref","_ref$pixelSize","chroma","scale","mode","map","result","rgba","resultCanvas","outputImageData","resultPixel","resultPixels","xI","yI","push","pixelizator","_this$filterOptions2","invert","transparent","step","fillMode","contourPixel","nonePixel","_ref2","beforePixel","ix","iy","contour","EventTarget","ColorsPallet","props","react_default","a","className","styles","key","style","backgroundColor","React","Component","nesPallet","battery24pallet","pico8pallet","PixelizatorOptions","handleChangeOptions","onChangeOptions","_this","palletMode","fromColor","toColor","colorScaleMode","totalColors","palletScheme","d3","react_dat_gui_default","onUpdate","react_dat_gui","path","label","min","max","renderColorSettings","ColorsPallet_ColorsPallet","ContourOptions","defaultFilterOptions","Pixelizator","Contour","None","Settings","_React$Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleChangeFilterOptions","setState","_this$state","setFilter","handleChangeFilter","_this$state2","inherits","createClass","value","_this$state3","PixelizatorOptions_PixelizatorOptions","ContourOptions_ContourOptions","renderFilterOptions","connect","ownProps","Icon","viewBox","fill","cn","Logo","Icon_Icon","WebCam","webcamStream","video","setAttribute","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","_stream$getVideoTrack","getVideoTracks","getSettings","catch","err","getTracks","stop","toDataURL","Header","handleClickOpenFile","fileUploaderRef","click","handleChangeFile","e","file","target","files","reader","FileReader","setImage","readAsDataURL","handleChangeCamAsSource","currentTarget","checked","webCam","start","repeatTakeCamImage","repeat","counter","camImageSrc","getSnapshot","delay","_this3","onClick","onChange","ref","display","id","htmlFor","Main","handleUpdateImage","handleImageProcessed","processedImageCanvas","putImageData","addEventListener","removeEventListener","alt","GitHubLink","href","rel","version","aria-hidden","fillRule","Root","store","react_redux_es","Logo_Logo","components_Settings_Settings","GitHubLink_GitHubLink","Header_Header","components_Main_Main","querySelector","ReactDOM","render","Root_Root","serviceWorker","ready","registration","unregister"],"mappings":"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,IAAPD,GAAYA,IAAON,EAAO,GAAY,IAAPO,GAAYA,IAAOP,EAAO,EACYT,EAEAY,GAEzE,MAEJ,IAAK,OAEGb,EAAkBrE,EAAkBqE,EAAiBnE,EAAImF,EAAIlF,EAAImF,EADjED,IAAOC,EAC8DhB,EAEAY,GAEzE,MAEJ,IAAK,QAEGb,EAAkBrE,EAAkBqE,EAAiBnE,EAAImF,EAAIlF,EAAImF,EADjED,IAAOC,GAAMP,EAAO,EAAIM,IAAOC,EACsChB,EAEAY,GASzFE,EAAchF,EAItB,OAAOiE,EFtB+BkB,CAAQ,CAC9BtF,UAAWsC,KAAKtC,UAChBwB,WACAoD,SACAC,cACAC,OACAC,aAEJ,MAEJ,IAAK,OACDzC,KAAKJ,mBAAqB,KAC1B,MAEJ,QACI,OAGRI,KAAKe,cAAc,IAAIC,MAAM,uCA5ERiC,wCGCRC,mLAKR,IACG9D,EAAWY,KAAKmD,MAAhB/D,OAER,OACIgE,EAAAC,EAAA5C,cAAA,OAAK6C,UAAWC,IAAOvI,MAClBoE,EAAOsC,IAAI,SAAAzC,GAAK,OACbmE,EAAAC,EAAA5C,cAAA,OAAK+C,IAAKvE,EAAOqE,UAAWC,IAAOvH,KAAMyH,MAAO,CAAEC,gBAAiBzE,eAX7C0E,IAAMC,WCJnCC,EAAY,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAkB,CAC3B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAc,CACvB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WC9Fi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","file":"static/js/main.047b8d48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2NddW\",\"sidebar\":\"styles_sidebar__1X4O7\",\"settings\":\"styles_settings__1IRNF\",\"content\":\"styles_content__2ogdv\",\"logo\":\"styles_logo__2qN_x\",\"header\":\"styles_header__2Nn0Q\",\"main\":\"styles_main__2lP6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"styles_image__2BslV\",\"processedImage\":\"styles_processedImage__2n3oq\",\"layersContainer\":\"styles_layersContainer__tvLeE\",\"layer\":\"styles_layer__1XaRb\",\"originalLayer\":\"styles_originalLayer__3MTth\",\"processedLayer\":\"styles_processedLayer__2e1az\",\"root\":\"styles_root__3cRUh\",\"noImage\":\"styles_noImage__1UMKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__quQKB\",\"icon\":\"styles_icon__15g5s\",\"title\":\"styles_title__1dpww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__SrPQh\",\"cell\":\"styles_cell__2YTQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3sJOE\",\"octicon\":\"styles_octicon__1VqCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2yjfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__14DCM\"};","export const UPDATE_SETTINGS = 'app/controls/UPDATE_SETTINGS';\n","import { UPDATE_SETTINGS } from './actionTypes';\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case UPDATE_SETTINGS: {\n            const { controls } = action;\n            return { ...state, ...controls };\n        }\n        default:\n            return state;\n    }\n}\n","import reducer from './reducer';\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport settings from './settings';\n\nexport default combineReducers({\n    settings,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules';\n\nconst configureStore = () => {\n    const initialState = {};\n    const enhancers = [];\n    const middleware = [thunk];\n\n    if (process.env.NODE_ENV !== 'production') {\n        const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n        if (typeof devToolsExtension === 'function') {\n            enhancers.push(devToolsExtension());\n        }\n    }\n\n    const composedEnhancers = compose(\n        applyMiddleware(...middleware),\n        ...enhancers,\n    );\n\n    const store = createStore(rootReducer, initialState, composedEnhancers);\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (module.hot) {\n            module.hot.accept('./modules', () => {\n                store.replaceReducer(rootReducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","/**\n * Set ImageData pixel by x/y coordinates\n * @param imageData\n * @param x\n * @param y\n * @param pixel\n * @returns {*}\n */\nexport function setImageDataPixel(imageData, x, y, pixel) {\n    const imageDataWidth = imageData.width;\n    for (let i = 0; i < 4; i += 1) {\n        imageData.data[(imageDataWidth * y + x) * 4 + i] = pixel[i];\n    }\n    return imageData;\n}\n\n/**\n * Get ImageData pixel by x/y coordinates\n * @param imageData\n * @param x\n * @param y\n * @returns {Array}\n */\nexport function getImageDataPixel(imageData, x, y) {\n    const imageDataWidth = imageData.width;\n\n    const pixel = [];\n    for (let i = 0; i < 4; i += 1) {\n        pixel[i] = imageData.data[(imageDataWidth * y + x) * 4 + i];\n    }\n    return pixel;\n}\n","/**\n * Get two colors distance\n * @param v1\n * @param v2\n * @returns {number}\n */\nexport function colorDistance(v1, v2) {\n    let d = 0;\n\n    for (let i = 0; i < v1.length; i += 1) {\n        d += (v1[i] - v2[i]) * (v1[i] - v2[i]);\n    }\n    return Math.sqrt(d);\n}\n\n/**\n * Get nearest color\n * @param sourceColor\n * @param compareColors\n * @returns {number[]}\n */\nexport function getNearestColor(sourceColor, compareColors) {\n    let nearestDistance = Number.MAX_SAFE_INTEGER;\n    let nearestColor = [0, 0, 0, 0];\n\n    compareColors.forEach(color => {\n        const distance = colorDistance(sourceColor, color);\n        if (distance < nearestDistance) {\n            nearestDistance = distance;\n            nearestColor = color;\n        }\n    });\n\n    return nearestColor;\n}\n\n/**\n * Get average color of colors array\n * @param colors\n * @returns {*}\n */\nexport function averageColor(colors) {\n    const results = colors.reduce(\n        (r, color) => {\n            for (let i = 0; i < 4; i += 1) {\n                r[i] += color[i];\n            }\n            return r;\n        },\n        [0, 0, 0, 0],\n    );\n\n    for (let i = 0; i < 4; i += 1) {\n        results[i] = Math.floor(results[i] / colors.length);\n    }\n\n    return results;\n}\n","import pixelizator from './pixelizator';\nimport contour from './contour';\n\nclass ImageProcessor extends EventTarget {\n    width = 0;\n    height = 0;\n\n    image = null;\n    imageSrc = null;\n    imageData = null;\n\n    processedImageData = null;\n\n    filter = null;\n    filterOptions = {};\n\n    setImage(imageSrc) {\n        return new Promise((resolve, reject) => {\n            this.imageSrc = imageSrc;\n\n            this.image = new Image();\n            this.image.src = this.imageSrc;\n\n            this.image.onload = () => {\n                this.height = this.image.height;\n                this.width = this.image.width;\n\n                const canvas = document.createElement('canvas');\n                canvas.width = this.width;\n                canvas.height = this.height;\n\n                const context = canvas.getContext('2d');\n                context.drawImage(this.image, 0, 0);\n                this.imageData = context.getImageData(0, 0, this.width, this.height);\n\n                this.processImage();\n\n                this.dispatchEvent(new Event('updateImage'));\n            };\n        });\n    }\n\n    setFilter(filter, options) {\n        this.filter = filter;\n        this.filterOptions = options;\n\n        this.processImage();\n    }\n\n    processImage() {\n        if (!this.image) {\n            return;\n        }\n        switch (this.filter) {\n            case 'Pixelizator': {\n                const { colors, pixelSize, accurateColors } = this.filterOptions;\n                this.processedImageData = pixelizator({ imageData: this.imageData, colors, pixelSize, accurateColors });\n                break;\n            }\n            case 'Contour': {\n                const { distance, invert, transparent, step, fillMode } = this.filterOptions;\n                this.processedImageData = contour({\n                    imageData: this.imageData,\n                    distance,\n                    invert,\n                    transparent,\n                    step,\n                    fillMode,\n                });\n                break;\n            }\n            case 'None': {\n                this.processedImageData = null;\n                break;\n            }\n            default:\n                return;\n        }\n\n        this.dispatchEvent(new Event('imageProcessed'));\n    }\n}\n\nconst imageProcessor = new ImageProcessor();\nexport default imageProcessor;\n","import chroma from 'chroma-js';\nimport { getImageDataPixel, setImageDataPixel } from '../utils/canvas';\nimport { averageColor, getNearestColor } from '../utils/colors';\n\n/**\n * Pixalizate image data\n * @param imageData\n * @param pixelSize\n * @param colors\n * @param accurateColors\n * @returns {ImageData}\n */\nexport default function pixalizator({ imageData, pixelSize = 5, colors, accurateColors }) {\n    const { width, height } = imageData;\n\n    colors =\n        colors ||\n        chroma\n            .scale(['#00fa26', '#580008'])\n            .mode('lch')\n            .colors(16);\n\n    colors = colors.map(color => {\n        const result = chroma(color).rgba();\n        result[3] = Math.floor(result[3] * 255);\n        return result;\n    });\n\n    const resultCanvas = document.createElement('canvas');\n    resultCanvas.width = width;\n    resultCanvas.height = height;\n\n    let outputImageData = resultCanvas.getContext('2d').getImageData(0, 0, width, height);\n    for (let x = 0; x < width; x += pixelSize) {\n        for (let y = 0; y < height; y += pixelSize) {\n            let resultPixel;\n            if (accurateColors) {\n                const resultPixels = [];\n\n                for (let xI = 0; xI < pixelSize; xI += 1) {\n                    for (let yI = 0; yI < pixelSize; yI += 1) {\n                        const pixel = getImageDataPixel(imageData, x + xI, y + yI);\n                        resultPixels.push(pixel);\n                    }\n                }\n\n                const averagePixel = averageColor(resultPixels);\n\n                resultPixel = getNearestColor(averagePixel, colors);\n            } else {\n                const pixel = getImageDataPixel(imageData, x, y);\n                resultPixel = getNearestColor(pixel, colors);\n            }\n\n            for (let xI = 0; xI < pixelSize; xI += 1) {\n                for (let yI = 0; yI < pixelSize; yI += 1) {\n                    outputImageData = setImageDataPixel(outputImageData, x + xI, y + yI, resultPixel);\n                }\n            }\n        }\n    }\n\n    return outputImageData;\n}\n","import { getImageDataPixel, setImageDataPixel } from '../utils/canvas';\nimport { colorDistance } from '../utils/colors';\n\n/**\n * Contour filter\n * @param imageData\n * @param distance\n * @param invert\n * @param transparent\n * @param step\n * @returns {ImageData}\n */\nexport default function contour({ imageData, distance, invert, transparent, step, fillMode }) {\n    const { width, height } = imageData;\n\n    const resultCanvas = document.createElement('canvas');\n    resultCanvas.width = width;\n    resultCanvas.height = height;\n\n    let contourPixel = [0, 0, 0, 255];\n    let nonePixel = [255, 255, 255, 255];\n    if (invert) {\n        [contourPixel, nonePixel] = [nonePixel, contourPixel];\n    }\n\n    let outputImageData = resultCanvas.getContext('2d').getImageData(0, 0, width, height);\n    for (let x = 0; x < width; x += step) {\n        let beforePixel = null;\n        for (let y = 0; y < height; y += step) {\n            const pixel = getImageDataPixel(imageData, x, y);\n\n            let resultPixel = nonePixel;\n            if (beforePixel) {\n                const pixelColorDistance = colorDistance(pixel, beforePixel);\n                if (pixelColorDistance > distance) {\n                    resultPixel = contourPixel;\n                }\n            }\n\n            if (transparent) {\n                nonePixel = [0, 0, 0, 0];\n            }\n\n            for (let ix = 0; ix < step; ix += 1) {\n                for (let iy = 0; iy < step; iy += 1) {\n                    switch (fillMode) {\n                        case 'square-fill': {\n                            outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, resultPixel);\n                            break;\n                        }\n                        case 'square-empty': {\n                            if (ix === 0 || ix === step - 1 || iy === 0 || iy === step - 1) {\n                                outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, resultPixel);\n                            } else {\n                                outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, nonePixel);\n                            }\n                            break;\n                        }\n                        case 'rain': {\n                            if (ix === iy) {\n                                outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, resultPixel);\n                            } else {\n                                outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, nonePixel);\n                            }\n                            break;\n                        }\n                        case 'cross': {\n                            if (ix === iy || step - 1 - ix === iy) {\n                                outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, resultPixel);\n                            } else {\n                                outputImageData = setImageDataPixel(outputImageData, x + ix, y + iy, nonePixel);\n                            }\n                            break;\n                        }\n                        default:\n                    }\n                }\n            }\n\n            beforePixel = pixel;\n        }\n    }\n\n    return outputImageData;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss';\n\nexport default class ColorsPallet extends React.Component {\n    static propTypes = {\n        colors: PropTypes.arrayOf(PropTypes.string),\n    };\n\n    render() {\n        const { colors } = this.props;\n\n        return (\n            <div className={styles.root}>\n                {colors.map(color => (\n                    <div key={color} className={styles.cell} style={{ backgroundColor: color }} />\n                ))}\n            </div>\n        );\n    }\n}\n","export const nesPallet = [\n    '#000000',\n    '#fcfcfc',\n    '#f8f8f8',\n    '#bcbcbc',\n    '#7c7c7c',\n    '#a4e4fc',\n    '#3cbcfc',\n    '#0078f8',\n    '#0000fc',\n    '#b8b8f8',\n    '#6888fc',\n    '#0058f8',\n    '#0000bc',\n    '#d8b8f8',\n    '#9878f8',\n    '#6844fc',\n    '#4428bc',\n    '#f8b8f8',\n    '#f878f8',\n    '#d800cc',\n    '#940084',\n    '#f8a4c0',\n    '#f85898',\n    '#e40058',\n    '#a80020',\n    '#f0d0b0',\n    '#f87858',\n    '#f83800',\n    '#a81000',\n    '#fce0a8',\n    '#fca044',\n    '#e45c10',\n    '#881400',\n    '#f8d878',\n    '#f8b800',\n    '#ac7c00',\n    '#503000',\n    '#d8f878',\n    '#b8f818',\n    '#00b800',\n    '#007800',\n    '#b8f8b8',\n    '#58d854',\n    '#00a800',\n    '#006800',\n    '#b8f8d8',\n    '#58f898',\n    '#00a844',\n    '#005800',\n    '#00fcfc',\n    '#00e8d8',\n    '#008888',\n    '#004058',\n    '#f8d8f8',\n    '#787878',\n];\n\nexport const battery24pallet = [\n    '#f8ffba',\n    '#332431',\n    '#573752',\n    '#784465',\n    '#8f476a',\n    '#a64c6c',\n    '#d9577c',\n    '#e04646',\n    '#e6634c',\n    '#e89851',\n    '#e8cb58',\n    '#e2ed82',\n    '#fcffde',\n    '#76e856',\n    '#3ae056',\n    '#c9fa75',\n    '#b5f26b',\n    '#41c47c',\n    '#46b38e',\n    '#4c90a1',\n    '#497791',\n    '#466287',\n    '#424a70',\n    '#303042',\n];\n\nexport const pico8pallet = [\n    '#000000',\n    '#5F574F',\n    '#C2C3C7',\n    '#FFF1E8',\n    '#FFEC27',\n    '#FFA300',\n    '#FFCCAA',\n    '#AB5236',\n    '#FF77A8',\n    '#FF004D',\n    '#83769C',\n    '#7E2553',\n    '#29ADFF',\n    '#1D2B53',\n    '#008751',\n    '#00E436',\n];\n","import React from 'react';\nimport DatGui, { DatColor, DatNumber, DatSelect, DatBoolean } from 'react-dat-gui';\nimport chroma from 'chroma-js';\nimport * as d3 from 'd3-scale-chromatic';\nimport ColorsPallet from '../ColorsPallet/ColorsPallet';\nimport { battery24pallet, nesPallet, pico8pallet } from '../../../utils/pallets';\n\nexport default class PixelizatorOptions extends React.Component {\n    handleChangeOptions = options => {\n        const { onChangeOptions } = this.props;\n\n        switch (options.palletMode) {\n            case 'colorScale': {\n                options.colors = chroma\n                    .scale([options.fromColor, options.toColor])\n                    .mode(options.colorScaleMode)\n                    .colors(options.totalColors);\n                break;\n            }\n            case 'fullColor': {\n                switch (options.palletScheme) {\n                    case 'schemeCategory10':\n                    case 'schemeAccent':\n                    case 'schemeDark2':\n                    case 'schemePaired':\n                    case 'schemePastel1':\n                    case 'schemePastel2':\n                    case 'schemeSet1':\n                    case 'schemeSet2':\n                    case 'schemeSet3': {\n                        options.colors = d3[options.palletScheme];\n                        break;\n                    }\n                    case 'blackWhite': {\n                        options.colors = ['#FFF', '#000'];\n                        break;\n                    }\n                    case 'pico8': {\n                        options.colors = pico8pallet;\n                        break;\n                    }\n                    case 'battery24': {\n                        options.colors = battery24pallet;\n                        break;\n                    }\n                    case 'nes': {\n                        options.colors = nesPallet;\n                        break;\n                    }\n                    default:\n                }\n                break;\n            }\n            default:\n        }\n\n        onChangeOptions(options);\n    };\n\n    renderColorSettings() {\n        const { options } = this.props;\n\n        switch (options.palletMode) {\n            case 'colorScale': {\n                return (\n                    <DatGui data={options} onUpdate={this.handleChangeOptions}>\n                        <DatColor key=\"fromColor\" path=\"fromColor\" label=\"Color from\" />\n                        <DatColor key=\"toColor\" path=\"toColor\" label=\"Color to\" />\n                        <DatSelect\n                            key=\"colorScaleMode\"\n                            path=\"colorScaleMode\"\n                            label=\"Color scale mode\"\n                            options={['hsl', 'hsv', 'lab', 'lch']}\n                        />\n                        <DatNumber\n                            key=\"totalColors\"\n                            path=\"totalColors\"\n                            label=\"Total colors\"\n                            min={2}\n                            max={32}\n                            step={1}\n                        />\n                    </DatGui>\n                );\n            }\n            case 'fullColor': {\n                return (\n                    <DatGui data={options} onUpdate={this.handleChangeOptions}>\n                        <DatSelect\n                            key=\"palletScheme\"\n                            path=\"palletScheme\"\n                            label=\"Pallet scheme\"\n                            options={[\n                                'blackWhite',\n                                'pico8',\n                                'battery24',\n                                'nes',\n                                'schemeCategory10',\n                                'schemeAccent',\n                                'schemeDark2',\n                                'schemePaired',\n                                'schemePastel1',\n                                'schemePastel2',\n                                'schemeSet1',\n                                'schemeSet2',\n                                'schemeSet3',\n                            ]}\n                        />\n                    </DatGui>\n                );\n            }\n            default:\n        }\n    }\n\n    render() {\n        const { options } = this.props;\n\n        return (\n            <div>\n                <DatGui data={options} onUpdate={this.handleChangeOptions}>\n                    <DatNumber key=\"pixelSize\" path=\"pixelSize\" min={1} max={20} step={1} label=\"Pixel size\" />\n                    <DatBoolean key=\"accurateColors\" path=\"accurateColors\" label=\"Accurate colors\" />\n                    <DatSelect\n                        key=\"palletMode\"\n                        path=\"palletMode\"\n                        label=\"Pallet mode\"\n                        options={['colorScale', 'fullColor']}\n                    />\n                </DatGui>\n                {this.renderColorSettings()}\n                <ColorsPallet colors={options.colors} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport DatGui, { DatBoolean, DatNumber, DatSelect } from 'react-dat-gui';\n\nexport default class ContourOptions extends React.Component {\n    handleChangeOptions = options => {\n        const { onChangeOptions } = this.props;\n\n        onChangeOptions(options);\n    };\n\n    render() {\n        const { options } = this.props;\n\n        return (\n            <div>\n                <DatGui data={options} onUpdate={this.handleChangeOptions}>\n                    <DatNumber key=\"distance\" path=\"distance\" min={1} max={150} step={1} label=\"Color distance\" />\n                    <DatBoolean key=\"invert\" path=\"invert\" label=\"Invert\" />\n                    <DatBoolean key=\"transparent\" path=\"transparent\" label=\"Transparent back\" />\n                    <DatNumber key=\"step\" path=\"step\" min={1} max={20} step={1} label=\"Step\" />\n                    <DatSelect\n                        key=\"fillMode\"\n                        path=\"fillMode\"\n                        label=\"Fill mode\"\n                        options={['square-fill', 'square-empty', 'rain', 'cross']}\n                    />\n                </DatGui>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport DatGui, { DatSelect } from 'react-dat-gui';\nimport chroma from 'chroma-js';\nimport imageProcessor from '../../common/imageProcessor';\nimport PixelizatorOptions from './PixelizatorOptions/PixelizatorOptions';\nimport ContourOptions from './ContourOptions/ContourOptions';\n\nconst defaultFilterOptions = {\n    Pixelizator: {\n        palletMode: 'colorScale',\n        palletScheme: 'battery24',\n        fromColor: '#fafa6e',\n        toColor: '#2A4858',\n        colorScaleMode: 'lch',\n        totalColors: 6,\n        pixelSize: 5,\n        accurateColors: true,\n        colors: [],\n    },\n    Contour: {\n        distance: 10,\n        invert: true,\n        transparent: false,\n        step: 2,\n        fillMode: 'square-fill',\n    },\n    None: {},\n};\ndefaultFilterOptions.Pixelizator.colors = chroma\n    .scale([defaultFilterOptions.Pixelizator.fromColor, defaultFilterOptions.Pixelizator.toColor])\n    .mode(defaultFilterOptions.Pixelizator.colorScaleMode)\n    .colors(defaultFilterOptions.Pixelizator.totalColors);\n\nexport class Settings extends React.Component {\n    state = {\n        filter: 'None',\n        filterOptions: {},\n    };\n\n    handleChangeFilterOptions = filterOptions => {\n        this.setState({ filterOptions }, () => {\n            const { filter, filterOptions } = this.state;\n            imageProcessor.setFilter(filter, filterOptions);\n        });\n    };\n\n    handleChangeFilter = ({ filter }) => {\n        this.setState({ filter, filterOptions: defaultFilterOptions[filter] }, () => {\n            const { filter, filterOptions } = this.state;\n            imageProcessor.setFilter(filter, filterOptions);\n        });\n    };\n\n    componentDidMount() {\n        this.handleChangeFilter({ filter: 'Pixelizator' });\n    }\n\n    renderFilterOptions() {\n        const { filter, filterOptions } = this.state;\n\n        switch (filter) {\n            case 'Pixelizator': {\n                return <PixelizatorOptions options={filterOptions} onChangeOptions={this.handleChangeFilterOptions} />;\n            }\n            case 'Contour': {\n                return <ContourOptions options={filterOptions} onChangeOptions={this.handleChangeFilterOptions} />;\n            }\n            default:\n        }\n\n        return <div />;\n    }\n\n    render() {\n        const { className } = this.props;\n\n        return (\n            <div className={className}>\n                <DatGui data={this.state} onUpdate={this.handleChangeFilter}>\n                    <DatSelect key=\"filter\" path=\"filter\" label=\"Filter\" options={['None', 'Pixelizator', 'Contour']} />\n                </DatGui>\n\n                {this.renderFilterOptions()}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Settings);\n","import React from 'react';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\n\nexport default class Icon extends React.Component {\n    render() {\n        const { className } = this.props;\n\n        return (\n            <svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" className={cn(className, styles.root)}>\n                <rect width=\"32\" height=\"32\" fill=\"#137CBD\" className=\"cell first\" />\n                <rect x=\"32\" y=\"32\" width=\"32\" height=\"32\" fill=\"#DB2C6F\" className=\"cell second\" />\n            </svg>\n        );\n    }\n}\n","import React from 'react';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport Icon from './Icon/Icon';\n\nexport default class Logo extends React.Component {\n    render() {\n        const { className } = this.props;\n\n        return (\n            <div className={cn(className, styles.root)}>\n                <Icon className={styles.icon} />\n                <div className={styles.title}>Pixel Mania</div>\n            </div>\n        );\n    }\n}\n","export default class WebCam {\n    webcamStream = null;\n\n    constructor() {\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = 480;\n        this.canvas.height = 360;\n\n        this.video = document.createElement('video');\n        this.video.setAttribute('playsInline', '');\n        this.video.setAttribute('autoPlay', '');\n    }\n\n    start() {\n        return new Promise((resolve, reject) => {\n            navigator.mediaDevices\n                .getUserMedia({\n                    video: true,\n                    audio: false,\n                })\n                .then(stream => {\n                    this.video.srcObject = stream;\n\n                    const { height, width } = stream.getVideoTracks()[0].getSettings();\n\n                    this.canvas.width = width;\n                    this.canvas.height = height;\n\n                    this.webcamStream = stream;\n                    resolve();\n                })\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n\n    stop() {\n        if (this.webcamStream) {\n            this.webcamStream.getTracks()[0].stop();\n            this.webcamStream = null;\n        }\n    }\n\n    getSnapshot() {\n        this.canvas.getContext('2d').drawImage(this.video, 0, 0, this.canvas.width, this.canvas.height);\n\n        return this.canvas.toDataURL();\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport repeat from '@avinlab/repeat';\nimport styles from './styles.module.scss';\nimport imageProcessor from '../../common/imageProcessor';\nimport WebCam from '../../common/webcam';\n\nexport class Header extends React.Component {\n    handleClickOpenFile = () => {\n        this.fileUploaderRef.click();\n    };\n\n    handleChangeFile = e => {\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = function(e) {\n            const content = e.target.result;\n            imageProcessor.setImage(content);\n        };\n        reader.readAsDataURL(file);\n    };\n\n    componentDidMount() {\n        this.repeatTakeCamImage = repeat({\n            action: counter => {\n                const camImageSrc = this.webCam.getSnapshot();\n                imageProcessor.setImage(camImageSrc);\n            },\n            delay: 1,\n        });\n\n        this.webCam = new WebCam();\n    }\n\n    handleChangeCamAsSource = e => {\n        const value = e.currentTarget.checked;\n        if (value) {\n            this.webCam.start();\n            this.repeatTakeCamImage.start();\n        } else {\n            this.webCam.stop();\n            this.repeatTakeCamImage.stop();\n        }\n    };\n\n    componentWillUnmount() {\n        this.repeatTakeCamImage.stop();\n        this.webCam.stop();\n    }\n\n    render() {\n        const { className } = this.props;\n        return (\n            <div className={cn(className, styles.root)}>\n                <div>\n                    <button onClick={this.handleClickOpenFile}>Open image file...</button>\n\n                    <input\n                        type=\"file\"\n                        onChange={this.handleChangeFile}\n                        ref={i => {\n                            this.fileUploaderRef = i;\n                        }}\n                        style={{ display: 'none' }}\n                    />\n                </div>\n\n                <div>\n                    <input type=\"checkbox\" id=\"camAsSource\" onChange={this.handleChangeCamAsSource} />\n                    <label htmlFor=\"camAsSource\">WebCam as image source</label>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport imageProcessor from '../../common/imageProcessor';\nimport styles from './styles.module.scss';\n\nexport class Main extends React.Component {\n    state = {\n        imageSrc: null,\n    };\n\n    handleUpdateImage = () => {\n        this.setState({\n            imageSrc: imageProcessor.imageSrc,\n        });\n    };\n\n    handleImageProcessed = () => {\n        if (imageProcessor.processedImageData) {\n            this.processedImageCanvas.width = imageProcessor.width;\n            this.processedImageCanvas.height = imageProcessor.height;\n            const ctx = this.processedImageCanvas.getContext('2d');\n\n            ctx.putImageData(imageProcessor.processedImageData, 0, 0);\n        } else {\n            this.processedImageCanvas.width = 0;\n            this.processedImageCanvas.height = 0;\n        }\n    };\n\n    componentDidMount() {\n        imageProcessor.addEventListener('updateImage', this.handleUpdateImage);\n        imageProcessor.addEventListener('imageProcessed', this.handleImageProcessed);\n    }\n\n    componentWillUnmount() {\n        imageProcessor.removeEventListener('updateImage', this.handleUpdateImage);\n        imageProcessor.removeEventListener('imageProcessed', this.handleImageProcessed);\n    }\n\n    render() {\n        const { className } = this.props;\n        const { imageSrc } = this.state;\n\n        return (\n            <div className={cn(className, styles.root)}>\n                <div className={styles.layersContainer}>\n                    <div className={styles.originalLayer}>\n                        {imageSrc ? (\n                            <img src={imageSrc} alt=\"\" className={styles.image} />\n                        ) : (\n                            <div className={styles.noImage}>No image selected!</div>\n                        )}\n                    </div>\n                    <div className={styles.processedLayer}>\n                        <canvas\n                            className={styles.processedImage}\n                            ref={i => {\n                                this.processedImageCanvas = i;\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Main);\n","/* eslint-disable max-len */\nimport React from 'react';\nimport styles from './styles.module.scss';\n\nexport default class GitHubLink extends React.Component {\n    render() {\n        return (\n            <div className={styles.main}>\n                <a href=\"https://github.com/avin/pixel-mania\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n                        />\n                    </svg>\n                </a>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport styles from './styles.module.scss';\nimport Settings from '../Settings/Settings';\nimport Logo from '../Logo/Logo';\nimport { Header } from '../Header/Header';\nimport Main from '../Main/Main';\nimport GitHubLink from '../GitHubLink/GitHubLink';\n\nexport default class Root extends React.Component {\n    render() {\n        const { store } = this.props;\n\n        return (\n            <Provider store={store}>\n                <div className={styles.root}>\n                    <div className={styles.sidebar}>\n                        <Logo className={styles.logo} />\n                        <Settings className={styles.settings} />\n                        <GitHubLink />\n                    </div>\n                    <div className={styles.content}>\n                        <Header className={styles.header} />\n                        <Main className={styles.main} />\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './redux/store';\nimport Root from './components/Root/Root';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// Init redux-store\nconst store = configureStore();\n\n// Mount React container\nconst target = document.querySelector('#root');\nReactDOM.render(<Root store={store} />, target);\n\nif (module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        ReactDOM.render(<Root store={store} />, target);\n    });\n}\n\nserviceWorker.unregister();\n","export function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}